# Production Application Properties
spring.application.name=card-cost-api

# Server configuration
server.port=8080
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# H2 Database Configuration (for demo - use PostgreSQL/MySQL in production)
spring.datasource.url=jdbc:h2:file:./data/cardcostdb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=false

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true

#OpenAPI/Swagger Configuration (disabled in production)
springdoc.swagger-ui.enabled=false
springdoc.api-docs.enabled=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.url=jdbc:h2:file:./data/cardcostdb;DB_CLOSE_ON_EXIT=FALSE
spring.flyway.user=sa
spring.flyway.password=
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false
spring.flyway.ignore-missing-migrations=false
spring.flyway.ignore-ignored-migrations=false
spring.flyway.ignore-pending-migrations=false
spring.flyway.clean-disabled=true

# External API Configuration
app.external.binlist.url=https://lookup.binlist.net/
app.external.binlist.timeout=5000
app.external.binlist.retry-attempts=3
app.external.binlist.retry-delay=1000

# Rate limiting for scalability
app.rate-limiting.enabled=true
app.rate-limiting.max-requests=7000
app.rate-limiting.window-duration=60000

# Connection pool configuration for high throughput
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.validation-timeout=5000

# JWT Configuration
app.jwt.secret=${JWT_SECRET:myProductionSecretKey2024!}
app.jwt.expiration=3600000
app.jwt.refresh-expiration=86400000

# Security Configuration
app.security.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://yourdomain.com}
app.security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.security.cors.allowed-headers=*
app.security.cors.allow-credentials=true

# Default users (use environment variables in production)
app.default.username=${DEFAULT_USERNAME:user}
app.default.password=${DEFAULT_PASSWORD:password}
app.admin.username=${ADMIN_USERNAME:admin}
app.admin.password=${ADMIN_PASSWORD:admin}

# Caching Configuration
spring.cache.type=simple

# Actuator for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true
management.endpoint.health.probes.enabled=true

# Performance tuning
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.max-connections=8192
server.tomcat.accept-count=100
server.tomcat.connection-timeout=20000

# Async processing
spring.task.execution.pool.core-size=4
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-

# Logging Configuration
logging.level.root=INFO
logging.level.com.etraveligroup.cardcostapi=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/card-cost-api.log
logging.file.max-size=10MB
logging.file.max-history=30

# Initial data configuration for clearing cost matrix
app.clearing-cost.default-country=OTHERS
app.clearing-cost.default-cost=10.00

# Define the base API path without version in the URI
api.base.path=/api

# Define the endpoint path
api.payment-cards-cost.endpoint=/payment-cards-cost

# Define supported API versions
api.supported-versions=1,2

# Define a default version if none is provided in the request
api.default.version=1
